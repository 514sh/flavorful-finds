name: DEPLOYMENT PIPELINE FOR RECIPE FINDER

on:
  push:
    branches:
      - main
  pull_request:
    branches: [master]
    types: [opened, synchronize]

env:
  TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  SECRET: ${{ secrets.SECRET }}
  PORT: ${{ secrets.PORT }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  builder:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: "18.17.0"
      # - name: Install Node Dependencies
      #   run: |
      #     cd frontend
      #     npm install
      # - name: Build Frontend
      #   run: |
      #     cd frontend
      #     npm run build
      # - name: Set up Python Environment
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.11.4"
      # - name: Install Python dependencies
      #   run: |
      #     cd backend
      #     pip install -r requirements/dev.txt
      # - name: Python Test
      #   run: |
      #     cd backend
      #     pytest
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Build and push recipe-finder-frontend
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./Dockerfile.frontend
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/recipe-finder-frontend:latest
      # - name: Build and push recipe-finder-backend
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./Dockerfile.backend
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/recipe-finder-backend:latest
      # - name: SCP nginx.conf
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ secrets.AWS_HOST }}
      #     username: ${{ secrets.AWS_USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.AWS_PORT }}
      #     source: nginx.conf
      #     target: /home/${{ secrets.AWS_USERNAME }}/nginx.conf
      # - name: SCP docker-compose-explicit.yml
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ secrets.AWS_HOST }}
      #     username: ${{ secrets.AWS_USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.AWS_PORT }}
      #     source: docker-compose-explicit.yml
      #     target: /home/${{ secrets.AWS_USERNAME }}/docker-compose.yml
      - name: executing remote ssh commands to ec2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.AWS_PORT }}
          script: |
            docker-compose down
            docker-compose up -d
